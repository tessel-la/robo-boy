.visualization-panel {
  display: flex;
  flex-direction: column; /* Stack controls above viewer */
  width: 100%;
  height: 100%; /* Fill parent height */
  min-height: 300px; /* Example minimum height */
  background-color: var(--background-color); /* Use theme variable */
  border-radius: var(--border-radius); /* Use theme variable */
  overflow: hidden; /* Prevent content spilling out */
  box-shadow: var(--box-shadow);
  padding: 10px; /* Add some padding around the panel */
  box-sizing: border-box; /* Include padding in width/height */
}

.visualization-controls {
  display: flex;
  flex-wrap: wrap; /* Allow controls to wrap on smaller screens */
  gap: 10px; /* Spacing between control items */
  margin-bottom: 10px; /* Space between controls and viewer */
  flex-shrink: 0; /* Prevent controls from shrinking */
}

.control-item {
  display: flex;
  align-items: center;
  gap: 5px;
}

.control-item label {
  font-size: 0.9em;
  color: var(--text-secondary);
  white-space: nowrap; /* Prevent label text wrapping */
}

.control-item input[type="text"],
.control-item .topic-selector-button {
  padding: 5px 8px;
  border: 1px solid var(--border-color);
  background-color: var(--input-background);
  color: var(--text-primary);
  border-radius: var(--border-radius-small);
  font-size: 0.9em;
}

.control-item input[type="text"] {
  min-width: 150px; /* Give input some base width */
  flex-grow: 1; /* Allow input to grow */
}

.fixed-frame-control {
 flex-grow: 1; /* Allow fixed frame input to take more space */
}

.topic-selector-control {
  position: relative; /* For dropdown positioning */
}

.topic-selector-button {
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: space-between; /* Push arrow to the end */
  min-width: 200px; /* Button base width */
}

.topic-selector-button .arrow {
  border: solid var(--text-secondary);
  border-width: 0 2px 2px 0;
  display: inline-block;
  padding: 3px;
  margin-left: 8px;
  transition: transform 0.2s ease-in-out;
}

.topic-selector-button .arrow.down {
  transform: rotate(45deg);
}

.topic-selector-button .arrow.up {
  transform: rotate(-135deg);
}

.topic-selector-dropdown {
  position: absolute;
  top: 100%; /* Position below the button */
  left: 0;
  background-color: var(--background-secondary);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius-small);
  margin-top: 5px;
  max-height: 200px;
  overflow-y: auto;
  z-index: 100; /* Ensure dropdown is on top */
  list-style: none;
  padding: 0;
  margin: 5px 0 0 0;
  min-width: 100%; /* Match button width */
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

.topic-item {
  padding: 8px 12px;
  cursor: pointer;
  white-space: nowrap;
  color: var(--text-primary);
}

.topic-item:hover {
  background-color: var(--accent-color);
  color: white;
}

.topic-item.disabled {
  color: var(--text-disabled);
  cursor: default;
  background-color: transparent;
}

.topic-item.error {
  color: var(--error-color);
  cursor: default;
  background-color: transparent;
}


/* --- ROS3D Viewer Container --- */
.ros3d-viewer {
  flex-grow: 1; /* Allow viewer to take remaining space */
  width: 100%;
  min-height: 200px; /* Minimum height for the viewer area */
  position: relative; /* Needed for absolute positioning of overlay */
  background-color: #1e1e1e; /* Darker background for viewer */
  border-radius: var(--border-radius-small);
  overflow: hidden; /* Important: Keep canvas contained */
  border: 1px solid var(--border-color); /* Optional border */
}

/* Style the canvas element created by ROS3D.Viewer */
.ros3d-viewer canvas {
  display: block; /* Remove any potential bottom spacing */
  width: 100% !important; /* Force canvas size */
  height: 100% !important; /* Force canvas size */
}

/* Overlay for messages (connecting, select topic, error) */
.viewer-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  font-style: italic;
  background-color: rgba(30, 30, 30, 0.85); /* Semi-transparent overlay */
  z-index: 10; /* Ensure it's above the canvas */
  pointer-events: none; /* Allow interaction with canvas */
  color: var(--text-secondary);
  border-radius: var(--border-radius-small); /* Match container */
}

.viewer-overlay.error-overlay {
    color: var(--error-color);
    background-color: rgba(80, 30, 30, 0.85); /* Reddish overlay for error */
}

.viz-placeholder {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  color: var(--text-secondary);
  font-style: italic;
  background-color: rgba(40, 44, 52, 0.8); /* Semi-transparent overlay */
  z-index: 10; /* Ensure it's above the canvas */
  pointer-events: none; /* Allow interaction with canvas if needed later */
} 