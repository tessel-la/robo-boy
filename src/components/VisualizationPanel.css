.visualization-panel {
  display: flex;
  flex-direction: column; /* Stack controls above viewer */
  width: 100%;
  height: 100%; /* Fill parent height */
  min-height: 300px; /* Example minimum height */
  background-color: var(--background-color); /* Use theme variable */
  border-radius: var(--border-radius); /* Use theme variable */
  box-shadow: var(--box-shadow);
  /* Remove padding from panel */
  padding: 0; 
  box-sizing: border-box; /* Include padding in width/height */
  position: relative; /* Needed for positioning button and popup */
  overflow: hidden; /* Contain the viewer */
}

/* Remove old controls bar */
/* .visualization-controls { ... } */

/* --- Settings Button --- */
.settings-button {
  position: absolute;
  top: 10px;
  right: 10px;
  z-index: 20; /* Above overlay */
  background-color: rgba(50, 50, 50, 0.8);
  color: #fff;
  border: 1px solid #666;
  border-radius: 50%;
  width: 35px;
  height: 35px;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  font-size: 1.2em;
  transition: background-color 0.2s ease, border-color 0.2s ease;
}

.settings-button:hover {
  background-color: rgba(80, 80, 80, 0.9);
  border-color: #aaa;
}

/* --- Settings Popup Container (Now an Overlay) --- */
.settings-popup-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 19; /* Below button, above overlay */
}

/* --- Settings Popup (Content Box within Overlay) --- */
.settings-popup {
  background-color: var(--card-bg, #2f2f2f);
  color: var(--text-primary, #e0e0e0);
  padding: 15px 20px;
  border-radius: 8px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
  min-width: 300px;
  max-width: 90%;
  max-height: 80vh; /* Limit height */
  overflow-y: auto; /* Allow vertical scroll if needed */
  border: 1px solid var(--border-color, #444);
  /* Custom Scrollbar */
  scrollbar-width: thin;
  scrollbar-color: var(--primary-color, #32CD32) var(--card-bg, #2f2f2f);
}

.settings-popup::-webkit-scrollbar {
  width: 8px;
}
.settings-popup::-webkit-scrollbar-track {
  background: var(--card-bg, #2f2f2f);
}
.settings-popup::-webkit-scrollbar-thumb {
  background-color: var(--primary-color, #32CD32);
  border-radius: 4px;
  border: 2px solid var(--card-bg, #2f2f2f);
}

/* SettingsPopup Header Adjustments */
.settings-popup-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 15px;
  padding-bottom: 10px;
  border-bottom: 1px solid var(--border-color, #444);
}

.settings-popup-header h3 {
  margin: 0;
  color: var(--primary-color, #32CD32);
}

.close-button {
  background: none;
  border: none;
  color: var(--text-secondary, #aaa);
  font-size: 1.4em;
  cursor: pointer;
  padding: 0;
  transition: color 0.2s ease;
}

.close-button:hover {
  color: var(--primary-color, #32CD32);
}

.settings-popup-content {
  display: flex;
  flex-direction: column;
  gap: 15px; /* Space between control groups */
}

.popup-control-item, .popup-control-group {
  display: flex;
  flex-direction: column; /* Stack label and control vertically */
  gap: 5px;
}

.popup-control-item label, .popup-control-group h4 {
  font-weight: bold;
  font-size: 0.95em;
  color: var(--text-secondary, #ccc);
  margin-bottom: 2px; /* Small space above control */
}

.popup-control-group h4 {
  margin: 0 0 5px 0; /* Add margin below h4 */
  padding-bottom: 5px;
  border-bottom: 1px dashed var(--border-color, #555);
}

select,
input[type="text"] /* Style if needed */ {
  padding: 8px 10px;
  border: 1px solid var(--border-color, #555);
  background-color: var(--background-secondary, #3a3a3a);
  color: var(--text-primary, #e0e0e0);
  border-radius: 4px;
  font-size: 0.9em;
}

select:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.topic-error-message {
  color: var(--error-color, #dc3545);
  font-size: 0.85em;
  margin-top: 5px;
}

/* --- Styles for TF Checkbox List --- */

.popup-control-group {
  /* General group styling already defined */
  border-top: 1px solid var(--border-color, #555); /* Separator */
  padding-top: 15px;
}

.tf-checkbox-list {
  list-style: none;
  padding: 0;
  margin: 0;
  max-height: 150px; /* Limit height and make scrollable */
  overflow-y: auto;
  /* Custom Scrollbar for list */
  scrollbar-width: thin;
  scrollbar-color: var(--primary-color, #32CD32) var(--background-secondary, #3a3a3a);
}

.tf-checkbox-list::-webkit-scrollbar {
  width: 6px;
}
.tf-checkbox-list::-webkit-scrollbar-track {
  background: var(--background-secondary, #3a3a3a);
}
.tf-checkbox-list::-webkit-scrollbar-thumb {
  background-color: var(--primary-color, #32CD32);
  border-radius: 3px;
  border: 1px solid var(--background-secondary, #3a3a3a);
}

.tf-checkbox-list li {
  padding: 4px 0;
}

.tf-checkbox-list label {
  display: flex; /* Align checkbox and text */
  align-items: center;
  cursor: pointer;
  font-weight: normal; /* Override bold label style if needed */
  font-size: 0.9em;
  color: var(--text-primary, #e0e0e0);
}

.tf-checkbox-list input[type="checkbox"] {
  margin-right: 8px;
  cursor: pointer;
  /* Optional: Basic checkbox styling */
  appearance: none;
  background-color: var(--background-secondary, #3a3a3a);
  border: 1px solid var(--border-color, #555);
  width: 16px;
  height: 16px;
  border-radius: 3px;
  position: relative; /* For checkmark */
  transition: background-color 0.2s, border-color 0.2s;
}

.tf-checkbox-list input[type="checkbox"]:checked {
  background-color: var(--primary-color, #32CD32);
  border-color: var(--primary-color, #32CD32);
}

/* Custom Checkmark (optional) */
.tf-checkbox-list input[type="checkbox"]:checked::before {
  content: '';
  position: absolute;
  left: 5px;
  top: 2px;
  width: 4px;
  height: 8px;
  border: solid white;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}

.no-frames-message {
  font-style: italic;
  color: var(--text-secondary, #aaa);
  font-size: 0.9em;
  margin-top: 5px;
}

/* --- ROS3D Viewer Container --- */
.ros3d-viewer {
  flex-grow: 1; /* Allow viewer to take remaining space */
  width: 100%;
  height: 100%;
  /* No background color here, let ROS3D handle it or use the panel's */
  min-height: 0; /* Override previous min-height if needed */
  position: relative; /* Needed for absolute positioning of overlay */
  /* border: 1px solid var(--border-color); */ /* Optional border */
}

/* Style the canvas element created by ROS3D.Viewer */
.ros3d-viewer canvas {
  display: block; /* Remove any potential bottom spacing */
  width: 100% !important; /* Force canvas size */
  height: 100% !important; /* Force canvas size */
}

/* Overlay for messages (connecting, select topic, error) */
.viewer-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgba(0, 0, 0, 0.6);
  color: #fff;
  font-size: 1.2em;
  z-index: 10; /* Above the viewer canvas */
}

.viewer-overlay.error-overlay {
  background-color: rgba(220, 53, 69, 0.8); /* Semi-transparent red */
  color: white;
}

.viz-placeholder {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  color: var(--text-secondary);
  font-style: italic;
  background-color: rgba(40, 44, 52, 0.8); /* Semi-transparent overlay */
  z-index: 10; /* Ensure it's above the canvas */
  pointer-events: none; /* Allow interaction with canvas if needed later */
} 